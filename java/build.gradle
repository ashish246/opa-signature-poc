plugins {
    id 'application'
    id 'java'
}

version '1.0-SNAPSHOT'

sourceCompatibility = 1.8

repositories {
    mavenCentral()
}

ext {
    javaMainClass = "OpaSignature"
}

def embeddedJRE = false

dependencies {
    compile group: 'org.bitbucket.b_c', name: 'jose4j', version: '0.5.0'
    compile group: 'com.nimbusds', name: 'nimbus-jose-jwt', version: '8.16'
    compile group: 'org.slf4j', name: 'slf4j-api', version: '1.7.30'
    compile group: 'com.fasterxml.jackson.core', name: 'jackson-databind', version: '2.10.3'
    compile group: 'commons-codec', name: 'commons-codec', version: '1.9'

    // Below dependency are added for nimbus-jose-jwt to be able to parse and read RSA key pair from a PEM file
    compile 'com.madgag.spongycastle:core:1.54.0.0'
    compile 'com.madgag.spongycastle:prov:1.54.0.0'
    compile 'com.madgag.spongycastle:pkix:1.54.0.0'
    compile 'com.madgag.spongycastle:pg:1.54.0.0'
    compile group: 'org.bouncycastle', name: 'bcprov-jdk15on', version: '1.54'
    compile group: 'org.bouncycastle', name: 'bcpkix-jdk15on', version: '1.54'

    // https://mvnrepository.com/artifact/info.picocli/picocli
    compile group: 'info.picocli', name: 'picocli', version: '4.3.2'
    // For compile time erro checking
    annotationProcessor 'info.picocli:picocli-codegen:4.3.2'
    testCompile group: 'junit', name: 'junit', version: '4.12'
}

application {
    mainClassName = javaMainClass
}

jar {
    manifest {
        attributes(
                'Class-Path': configurations.compile.join(' '),
                'Main-Class': 'OpaSignature',
        )
    }
}

//task copyDependencies(type: Copy) {
//    from configurations.compile
//    into "${buildDir}/${distsDirName}"
//}

// javapackager command is used to generate the executable for Java 1.8 version.
// DMG type doesnt work in some MacOS versions - https://bugs.java.com/bugdatabase/view_bug.do?bug_id=8190758
task javapackager(type: Exec, dependsOn: [assemble]) {
    def nativeType
    if (System.properties['os.name'].toLowerCase().contains('windows'))
        nativeType = 'msi'
    if (System.properties['os.name'].toLowerCase().contains('mac'))
        nativeType = 'pkg'
    if (System.properties['os.name'].toLowerCase().contains('linux'))
        nativeType = 'rpm'

    def dependencies = []
    configurations.runtime.forEach({ file ->
        dependencies.add('-srcfiles')
        dependencies.add(file.getName())
    })

    def paramEmbeddedJRE = embeddedJRE ? [] : ['-Bruntime=']

    workingDir project.projectDir
    commandLine = [
            'javapackager',
            '-deploy',
            '-nosign',
            '-native', nativeType,
            '-outdir', "${buildDir}/${distsDirName}",
            '-outfile', "java-opasign",
            '-name', 'opa-signature-poc',
            '-srcfiles', "${buildDir}/libs/" + jar.archiveName,
//            '-srcfiles', "${buildDir}/${distsDirName}/" + jar.archiveName + ".jar",
//            '-BmainJar', jar.archiveName,
            '-appclass', javaMainClass
//            '-srcdir', "${buildDir}/${distsDirName}",
    ]
}